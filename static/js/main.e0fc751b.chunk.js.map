{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0fc751b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled  from '@emotion/styled';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\nconst TextoHeader = styled.h1`\r\n    font-size:2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px',serif;\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n     );\r\n}\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired,\r\n}\r\n \r\nexport default Header;","//diferencia de años\r\nexport function obtenerDiferenciaYear (year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n//calcula el total a pagar segun la marca\r\nexport function calcularMarca (marca) {\r\n    let incremento;\r\n\r\n    switch (marca) {\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento\r\n}\r\n\r\n//calcula el tipo de seguro\r\nexport function obtenerPlan (plan) {\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\n//Muestar la primer letra mayuscula\r\nexport function primerMayuscula (texto) {\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1); \r\n}","import React, {useState} from 'react';\r\nimport styled  from '@emotion/styled';\r\nimport PropTypes from 'prop-types'; \r\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper';\r\n\r\nconst Campo = styled.div`\r\n    display:flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;  \r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .5s ease;\r\n    margin-top:2rem;\r\n\r\n    &:hover{\r\n        background-color: #26C6DA;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nconst Formulario = ({guardarResumen,guardarCargando}) => {\r\n    const [datos, guardarDatos] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n\r\n    const [error, guardarError] = useState(false); \r\n\r\n    //extraer los valores del state\r\n    const {marca, year, plan} = datos;\r\n\r\n    //leer los datos del formulario y colocarlos en el state\r\n    const obtenerInformacion = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //cuando el usuario presiona submit\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n\r\n        if(marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        //Una base de 2000\r\n        let resultado = 2000;\r\n\r\n        //obtener la diferencia de años\r\n        const diferencia = obtenerDiferenciaYear (year);\r\n\r\n        //por cada año hay que restar el 3%\r\n        resultado -= ((diferencia*3)*resultado)/100;\r\n\r\n        //Americano-------->15%  Asiatico---------->5%  Europeo----------->30%\r\n        resultado = calcularMarca(marca) * resultado;\r\n\r\n        //Bascio aumenta--------->20%  Completo---------->50%\r\n        const incrementoPlan = obtenerPlan(plan);\r\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n\r\n        guardarCargando(true);\r\n\r\n        setTimeout(() =>{\r\n            guardarCargando(false);\r\n            //Total\r\n            guardarResumen({\r\n                cotizacion: Number(resultado),\r\n                // datos: datos\r\n                datos,\r\n            })\r\n        },3000);\r\n\r\n    }\r\n\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name='marca'\r\n                    value={marca}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asiático</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name='year'\r\n                    value={year}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio \r\n                    type='radio'\r\n                    name='plan'\r\n                    value='basico'\r\n                    checked={plan === 'basico'}\r\n                    onChange={obtenerInformacion}\r\n                /> Básico\r\n\r\n                <InputRadio \r\n                    type='radio'\r\n                    name='plan'\r\n                    value='completo'\r\n                    checked={plan === 'completo'}\r\n                    onChange={obtenerInformacion}\r\n                /> Completo\r\n            </Campo>\r\n\r\n            <Boton type='submit'>Cotizar</Boton>\r\n        </form>\r\n\r\n     );\r\n};\r\nFormulario.propTypes = {\r\n    guardarResumen: PropTypes.func.isRequired,\r\n    guardarCargando: PropTypes.func.isRequired,\r\n}\r\n \r\nexport default Formulario;","import React  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled  from '@emotion/styled';\r\nimport {primerMayuscula} from '../helper'\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #fff;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({datos}) => {\r\n\r\n    //extraer de datos\r\n    const {marca, year, plan} = datos\r\n    if(marca === ''|| year === '' || plan === '') return null;\r\n\r\n    return (\r\n        <ContenedorResumen>          \r\n            <h2> Resumen de Cotizacion</h2>\r\n            <ul>\r\n                <li>Marca: {primerMayuscula(marca)}</li>\r\n                <li>Plan: {primerMayuscula(plan)}</li>\r\n                <li>Año del Auto: {year}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n}\r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired,\r\n}\r\nexport default Resumen;","import React from 'react';\r\nimport styled  from '@emotion/styled';\r\nimport PropTypes from 'prop-types'; \r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127,224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26C6DA;\r\n    background-color: rgb(127,224, 237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\n\r\nconst Resultado = ({cotizacion}) => {\r\n\r\n    return (\r\n        (cotizacion === 0) \r\n            ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n            : (\r\n            \r\n                <ResultadoCotizacion>\r\n                    <TransitionGroup\r\n                        component='span'\r\n                        className='resultado'\r\n                    >\r\n                        <CSSTransition\r\n                            classNames='resultado'\r\n                            key={cotizacion}\r\n                            timeout={{enter:500, exit: 500}}\r\n                        >\r\n                            <TextoCotizacion>El total es : S/. <span>{cotizacion}</span></TextoCotizacion>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </ResultadoCotizacion>\r\n            \r\n              )\r\n    )\r\n}\r\nResultado.propTypes = {\r\n    cotizacion: PropTypes.number.isRequired,\r\n}\r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (  \r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Spinner;","import React , {useState} from 'react';\nimport Header from './components/Header'\nimport Formulario from './components/Formulario'\nimport Resumen from './components/Resumen'\nimport Resultado from './components/Resultado'\nimport Spinner from './components/Spinner'\n\nimport styled  from '@emotion/styled';\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color:#fff ;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, guardarResumen] = useState({\n    cotizacion:0,\n    datos:{\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  //extraer datos\n  const { datos, cotizacion } = resumen;\n\n\n\n  return (\n    <Contenedor>\n      <Header \n        titulo='Cotizador de Seguros'\n      />\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n        {cargando ? <Spinner /> : null}\n        \n\n        <Resumen \n          datos={datos} \n        />\n\n        {!cargando \n          ? <Resultado \n              cotizacion={cotizacion}\n            />\n          : null\n        }\n        \n      </ContenedorFormulario>      \n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}